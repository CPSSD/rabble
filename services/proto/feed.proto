syntax = "proto3";

option go_package = "services/proto";

import "google/protobuf/wrappers.proto";

// Request a feed for the given user.
message FeedRequest {
  // To request all posts on this instance, send a blank username.
  string username = 1;
  google.protobuf.Int64Value user_global_id = 2;
}

// To request for a specific article
message ArticleRequest {
  int64 article_id = 1;
  google.protobuf.Int64Value user_global_id = 2;
}

// These responses will eventually be database.PostsResponse or at least use
// PostsEntry. Right now our builds don't allow for importing proto files
// between services. For that reason we'll keep it simple and ignore errors.
message Post {
  int64 global_id = 1;
  string author = 2;
  string title = 3;
  string body = 4;
  string published = 5;
  int64 likes_count = 6;
  string bio = 7;
  string image = 8;
  bool is_liked = 9;
  bool is_followed = 10;
  bool is_shared = 11;
  int64 author_id = 12;
  string author_host = 13;
  int64 shares_count = 14;
  string author_display = 15;
}

message Share {
  int64 global_id = 1;
  string author = 2;
  string title = 3;
  string body = 4;
  string published = 5;
  int64 likes_count = 6;
  string bio = 7;
  string image = 8;
  bool is_liked = 9;
  bool is_followed = 10;
  bool is_shared = 11;
  string sharer = 12;
  string sharer_bio = 13;
  string share_datetime = 14;
  string author_host = 15;
  int64 author_id = 16;
  int64 shares_count = 17;
  string author_display = 18;
  string sharer_host = 19;
}

message FeedResponse {
  enum FeedError {
    NO_ERROR = 0;
    USER_NOT_FOUND = 1;
    UNAUTHORIZED = 2;
  }

  repeated Post results = 1;
  FeedError error = 2;

  repeated Share share_results = 5;
}

service Feed {
  rpc Get(FeedRequest) returns (FeedResponse);
  rpc PerUser(FeedRequest) returns (FeedResponse);
  rpc PerArticle(ArticleRequest) returns (FeedResponse);
}
