syntax = "proto3";

option go_package = "services/proto";

// Request a feed for the given user.
message ActorRequest {
  // Required.
  string username = 1;
}

message PublicKey {
  string id = 1;
  string owner = 2;
  string public_key_pem = 3;
}

message ActorObject {
  string type = 1;
  string inbox = 2;
  string outbox = 3;
  string name = 4;
  string preferredUsername = 5;
  string following = 6;
  string followers = 7;
  int64 global_id = 8;
  PublicKey public_key = 9;
  /* The public-facing actor URL */
  string id = 10;
}

message ActorResponse {
  ActorObject actor = 1;
}

message CollectionResponse {
  string collection = 1;
}

message ArticleApRequest {
  // Required.
  string username = 1;
  int64 article_id = 2;
}

message ArticleResponse {
  string actor = 1;
  string content = 2;
  string published = 3;
  string summary = 4;
  string title = 5;
  string ap_id = 6;
  string article_url = 7;
}

service Actors {
  rpc Get(ActorRequest) returns (ActorResponse);
  rpc GetFollowing(ActorRequest) returns (CollectionResponse);
  rpc GetFollowers(ActorRequest) returns (CollectionResponse);
  rpc GetArticle(ArticleApRequest) returns (ArticleResponse);
}
