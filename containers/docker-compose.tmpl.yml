version: '2'

networks:
  [[NETWORK_NAME]]:
    [[NETWORK_CONFIG]]

services:
  [[SKINNY_HOST]]:
    ports:
      - "[[SKINNY_PORT]]:[[SKINNY_PORT]]"
    build:
      context: ./skinny
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    environment:
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
      - SKINNY_SERVER_PORT=[[SKINNY_PORT]]
      - USERS_SERVICE_HOST=users_service_[[INSTANCE_ID]]
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - FOLLOWS_SERVICE_HOST=follows_service_[[INSTANCE_ID]]
      - ARTICLE_SERVICE_HOST=article_service_[[INSTANCE_ID]]
      - FEED_SERVICE_HOST=feed_service_[[INSTANCE_ID]]
      - CREATE_SERVICE_HOST=create_service_[[INSTANCE_ID]]
      - LDNORM_SERVICE_HOST=ldnorm_service_[[INSTANCE_ID]]
      - RSS_SERVICE_HOST=rss_service_[[INSTANCE_ID]]
      - FOLLOW_ACTIVITY_SERVICE_HOST=follow_activity_service_[[INSTANCE_ID]]
      - LIKE_SERVICE_HOST=like_service_[[INSTANCE_ID]]
      - UNDO_SERVICE_HOST=undo_service_[[INSTANCE_ID]]
      - UPDATE_SERVICE_HOST=update_service_[[INSTANCE_ID]]
      - DELETE_SERVICE_HOST=delete_service_[[INSTANCE_ID]]
      - APPROVER_SERVICE_HOST=approver_service_[[INSTANCE_ID]]
      - FOLLOW_RECOMMENDATIONS_HOST=recommend_follows_service_[[INSTANCE_ID]]
      - ACTORS_SERVICE_HOST=actors_service_[[INSTANCE_ID]]
      - SEARCH_SERVICE_HOST=search_service_[[INSTANCE_ID]]
      - ANNOUNCE_SERVICE_HOST=announce_service_[[INSTANCE_ID]]
      - POST_RECOMMENDATIONS_SERVICE_HOST=recommend_posts_service_[[INSTANCE_ID]]
      - POST_RECOMMENDATIONS_NO_OP=[[POSTS_SERVICE_LOCATION]]
      - FOLLOW_RECOMMENDATIONS_NO_OP=[[FOLLOWS_SERVICE_LOCATION]]
  feed_service_[[INSTANCE_ID]]:
    build:
      context: ./services/feed
      dockerfile: Dockerfile
    networks:
      - [[NETWORK_NAME]]
      - default
    volumes:
      - .:/repo
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
  users_service_[[INSTANCE_ID]]:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
  like_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/like
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
    environment:
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  undo_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/undo
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
    environment:
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  update_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/update
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
    environment:
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - MDC_SERVICE_HOST=markdown_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  delete_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/delete
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
    environment:
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  ldnorm_service_[[INSTANCE_ID]]:
    build:
      context: ./services/ldnormaliser
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
    environment:
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
  database_service_[[INSTANCE_ID]]:
    build:
      context: ./services/database
      dockerfile: Dockerfile
      args:
        - DBPATH=[[DBPATH]]
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
    environment:
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
  follows_service_[[INSTANCE_ID]]:
    build:
      context: ./services/follows
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
      - "follow_activity_service_[[INSTANCE_ID]]"
      - "approver_service_[[INSTANCE_ID]]"
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - RSS_SERVICE_HOST=rss_service_[[INSTANCE_ID]]
      - FOLLOW_ACTIVITY_SERVICE_HOST=follow_activity_service_[[INSTANCE_ID]]
      - APPROVER_SERVICE_HOST=approver_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  logger_service_[[INSTANCE_ID]]:
    build:
      context: ./services/logger
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
  article_service_[[INSTANCE_ID]]:
    build:
      context: ./services/article
      dockerfile: Dockerfile
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - CREATE_SERVICE_HOST=create_service_[[INSTANCE_ID]]
      - MDC_SERVICE_HOST=markdown_service_[[INSTANCE_ID]]
      - SEARCH_SERVICE_HOST=search_service_[[INSTANCE_ID]]
  create_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/create
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    networks:
      - [[NETWORK_NAME]]
      - default
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - ARTICLE_SERVICE_HOST=article_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  approver_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/approver
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    networks:
      - [[NETWORK_NAME]]
      - default
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  follow_activity_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/follow
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - FOLLOWS_SERVICE_HOST=follows_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  markdown_service_[[INSTANCE_ID]]:
    build:
      context: ./services/mdc
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
  rss_service_[[INSTANCE_ID]]:
    build:
      context: ./services/rss
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    networks:
      - [[NETWORK_NAME]]
      - default
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - ARTICLE_SERVICE_HOST=article_service_[[INSTANCE_ID]]
      - MDC_SERVICE_HOST=markdown_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  recommend_follows_service_[[INSTANCE_ID]]:
    build:
      context: [[FOLLOWS_SERVICE_LOCATION]]
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - FOLLOW_RECOMMENDER_METHOD=[[FOLLOW_RECOMMENDER_METHOD]]
      - SERVICE_NAME=recommend_follows_service_[[INSTANCE_ID]]
  actors_service_[[INSTANCE_ID]]:
    build:
      context: ./services/actors
      dockerfile: Dockerfile
    volumes:
     - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - FOLLOWS_SERVICE_HOST=follows_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  search_service_[[INSTANCE_ID]]:
    build:
      context: ./services/search/[[SEARCH_TYPE]]
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - INDEX_PATH=/tmp/rabble/index
  announce_service_[[INSTANCE_ID]]:
    build:
      context: ./services/activities/announce
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "logger_service_[[INSTANCE_ID]]"
      - "article_service_[[INSTANCE_ID]]"
      - "database_service_[[INSTANCE_ID]]"
    environment:
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - ARTICLE_SERVICE_HOST=article_service_[[INSTANCE_ID]]
      - HOST_NAME=[[EXTERNAL_ADDRESS]]
  recommend_posts_service_[[INSTANCE_ID]]:
    build:
      context: [[POSTS_SERVICE_LOCATION]]
      dockerfile: Dockerfile
    volumes:
      - .:/repo
    networks:
      - [[NETWORK_NAME]]
      - default
    depends_on:
      - "database_service_[[INSTANCE_ID]]"
    environment:
      - DB_SERVICE_HOST=database_service_[[INSTANCE_ID]]
      - LOGGER_SERVICE_HOST=logger_service_[[INSTANCE_ID]]
      - POSTS_RECOMMENDER_METHOD=[[POSTS_RECOMMENDER_METHOD]]
      - SERVICE_NAME=recommend_posts_service_[[INSTANCE_ID]]
